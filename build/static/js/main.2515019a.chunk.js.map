{"version":3,"sources":["_users/ShowUsersList.js","_users/SearchUser.js","LeftDiv.js","_users/AddUser.js","_todos/AddTodo.js","_posts/AddPost.js","_todos/ShowTodosList.js","_posts/ShowPostsList.js","TodosAndPosts.js","RightDiv.js","_dal/Users.js","_dal/Todos.js","_dal/Posts.js","Default.js","mainreducer.js","App.js","serviceWorker.js","index.js"],"names":["ShowUsersList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateUser","user","_user","id","name","email","address","street","city","zipcode","dispatch","type","selectUser","userId","setState","selectedUser","checkTodoList","store","todos","filter","todo","completed","length","deleteUser","uid","hideOrShow","action","userIdAtShowArray","state","shownOtherData","includes","arr","hidearr","push","users","searchTerm","_this2","usersList","toLowerCase","map","index","react_default","a","createElement","formik_esm","key","initialValues","onSubmit","values","_ref","setSubmitting","className","concat","Link","onClick","bind","to","value","onMouseOver","style","display","Component","connect","SearchUser","addUser","console","log","assertThisInitialized","searchTermChanged","e","target","searchterm","placeholder","onChange","LeftDiv","_users_SearchUser","_users_ShowUsersList","AddUser","changedEmail","Email","changedName","Name","cancel","history","add","tempArr","sort","b","AddTodo","changedTitle","title","nextId","_todo","parseInt","match","params","AddPost","changedBody","body","posts","_post","post","ShowTodosList","url","markCompleted","todoId","ShowPostsList","item","TodosAndPosts","Switch","Route","path","component","RightDiv","Users","axios","get","getAllUsersFromWS","Todos","getAllTodosFromWS","Posts","getAllPostsFromWS","then","data","Default","getUsers","getAllUsers","res","getTodos","getAllTodos","getPosts","getAllPosts","Promise","resolve","initialState","usersBySearch","selectedUserId","mainreducer","arguments","undefined","objectSpread","_users","userIndex","findIndex","todoIndex","element","appStore","createStore","App","es","BrowserRouter","Redirect","exact","from","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2515019a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Formik, Form, Field } from 'formik';\n\n\nimport \"../App.css\";\n\nclass ShowUsersList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      users: [],\n      searchTerm: \"\",\n      selectedUser: 0,\n      street: \"\",\n      city: \"\",\n      zipcode: \"\",\n      shownOtherData: []\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    return {\n      users: props.store.users,\n      searchTerm: props.store.searchTerm\n    };\n  }\n\n  updateUser = (user) => {\n    var _user = {\n      id: user.id,\n      name: user.name,\n      email: user.email,\n      address: {\n        street: user.street,\n        city: user.city,\n        zipcode: user.zipcode\n      }\n    };\n    this.props.dispatch({ type: \"updateUser\", user: _user });\n  };\n\n  selectUser = userId => {\n    this.setState({ selectedUser: userId });\n  };\n  checkTodoList = userId => {\n    var tasksForUser = this.props.store.todos.filter(todo => {\n      return todo.userId === userId && todo.completed === false;\n    }).length;\n    if (tasksForUser > 0) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n  deleteUser = uid => {\n    this.props.dispatch({ type: \"deleteUser\", userId: uid });\n  };\n\n  hideOrShow = (userId, action) => {\n    var userIdAtShowArray = this.state.shownOtherData.includes(userId);\n    var arr = this.state.shownOtherData;\n    if (action === \"hide\") {\n      var hidearr = arr.filter(user => user !== userId);\n      this.setState({ shownOtherData: hidearr });\n    } else if (action === \"show\" && !userIdAtShowArray) {\n      arr.push(userId);\n      this.setState({ shownOtherData: arr });\n    }\n  };\n\n  render() {\n    var _users = this.state.users.filter(\n      user =>\n        user.name.toLowerCase().includes(this.state.searchTerm.toLowerCase()) ||\n        user.email.toLowerCase().includes(this.state.searchTerm.toLowerCase())\n    );\n    var usersList = _users.map((user, index) => {\n      return (\n        <Formik\n          key={user.id}\n          initialValues={{ id: user.id, name: user.name, email: user.email, zipcode: user.address.zipcode, street: user.address.street, city: user.address.city }}\n          onSubmit={(values, { setSubmitting }) => {\n            this.updateUser(values)\n          }}\n        >\n          {() => (\n            <Form>\n              <div\n                className={`userListItem ${\n                  this.state.selectedUser !== user.id ? \"\" : \"selectedUser\"\n                  } \n          ${\n                  this.checkTodoList(user.id) ? \"completedTasks\" : \"uncompletedTasks\"\n                  }`}\n\n              >\n                <div>\n                  <Link\n                    onClick={this.selectUser.bind(this, user.id)}\n                    to={`/index/user/${user.id}`}\n                  >\n                    ID :\n            </Link>\n                <span name='id' type='label' value={user.id} >{user.id}</span>\n                </div>\n                <div className=\"rowDiv\">\n                  <span className=\"label\"> Name : </span>\n                  <Field\n                    className=\"floatrightBtn\"\n                    type=\"text\"\n                    name='name'\n                  />\n                </div>\n                <div className=\"rowDiv\">\n                  <span className=\"label\"> Email : </span>\n                  <Field\n                    className=\"floatrightBtn\"\n                    type=\"text\"\n                    name='email'\n                  />\n                </div>\n                <div />\n\n                <div>\n                  <input\n                    type=\"button\"\n                    onClick={this.hideOrShow.bind(this, user.id, \"hide\")}\n                    onMouseOver={this.hideOrShow.bind(this, user.id, \"show\")}\n                    className=\"otherDataBtn\"\n                    value=\"Other Data\"\n                  />\n                  <div\n                    className=\"otherDetails\"\n                    style={\n                      this.state.shownOtherData.includes(user.id)\n                        ? { display: \"block\" }\n                        : { display: \"none\" }\n                    }\n                  >\n                    <div className=\"rowDiv\">\n                      <span className=\"label\">Street :</span>\n                      <Field\n                        className=\"floatrightBtn\"\n                        type=\"text\"\n                        name='street'\n                      />\n                    </div>\n                    <div className=\"rowDiv\">\n                      <span className=\"label\"> City : </span>\n                      <Field\n                        className=\"floatrightBtn\"\n                        type=\"text\"\n                        name='city'\n                      />\n                    </div>\n                    <div className=\"rowDiv\">\n                      <span className=\"label\">Zip Code :</span>\n                      <Field\n                        className=\"floatrightBtn\"\n                        type=\"text\"\n                        name='zipcode'\n                      />\n                    </div>\n                  </div>\n\n                  <input\n                    type=\"submit\"\n                    className=\"button\"\n                    value=\"Update\"\n                  />\n                  <input\n                    type=\"button\"\n                    onClick={this.deleteUser.bind(this, user.id)}\n                    className=\"button\"\n                    value=\"Delete\"\n                  />\n                </div>\n              </div> </Form>\n          )}\n        </Formik>\n      );\n    });\n\n    return (\n\n      <div>\n\n        {usersList}\n        {/* <Field type=\"email\" name=\"email\" />\n              <ErrorMessage name=\"email\" component=\"div\" />\n              <Field type=\"password\" name=\"password\" />\n              <ErrorMessage name=\"password\" component=\"div\" />\n              <button type=\"submit\" disabled={isSubmitting}>\n                Submit\n        </button> */}\n\n      </div>\n\n    );\n  }\n}\n\nconst mapStoreToProps = state => {\n  return {\n    store: state\n  };\n};\n\nexport default connect(mapStoreToProps)(ShowUsersList);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"../App.css\";\nimport {Link} from 'react-router-dom';\n\nclass SearchUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { searchterm: \"\" };\n  }\n\n  addUser = () => {\n    console.log(this);\n    //props.history.push(\"/\");\n  };\n  searchTermChanged = e => {\n    this.props.dispatch({\n      type: \"SetUsersSearchTerm\",\n      searchTerm: e.target.value\n    });\n  };\n  render() {\n    return (\n      <div>\n        Search\n        <input\n          className=\"space\"\n          type=\"text\"\n          \n          placeholder=\"search user name or email\"\n          onChange={this.searchTermChanged}\n        />\n        <Link to={'/index/adduser'}>\n        <input\n          className=\"space button\"\n          type=\"button\"\n          value=\"Add\"\n          onClick={this.addUser}\n        /></Link>\n      </div>\n    );\n  }\n}\n\nexport default connect()(SearchUser);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport ShowUsersList from \"./_users/ShowUsersList\";\nimport SearchUser from \"./_users/SearchUser\";\n\nclass LeftDiv extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <SearchUser />\n        <ShowUsersList />\n      </div>\n    );\n  }\n}\n\nexport default LeftDiv;\n","import React, { Component } from \"react\";\nimport \"../App.css\";\nimport { connect } from \"react-redux\";\n\nclass AddUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { Name: \"\", Email: \"\" };\n  }\n\n  changedEmail = e => {\n    this.setState({ Email: e.target.value });\n  };\n  changedName = e => {\n    this.setState({ Name: e.target.value });\n  };\n  cancel = () => {\n    this.props.history.push(\"index/\");\n  };\n  add = () => {\n    var tempArr = this.props.store.users;\n    var nextId =\n      tempArr.sort((a, b) => {\n        return a.id-b.id  ;\n      })[tempArr.length-1].id + 1;\n    var _user = {\n      id: nextId,\n      name: this.state.Name,\n      email: this.state.Email,\n      address: {\n        street: \"\",\n        city: \"\",\n        zipcode: \"\"\n      }\n    };\n    this.props.dispatch({ type: \"addUser\", user: _user });\n    this.props.history.push(\"index/\");\n  };\n  render() {\n    return (\n      <div className=\"\">\n        <div className=\"left topdiv\">\n          <span className=\"label\">Add New User</span>\n        </div>\n        <div className=\"App addpost\">\n          <span className=\"label\">Name :</span>\n          <input\n            className=\"margleft\"\n            onChange={this.changedName}\n            type=\"text\"\n            value={this.state.Name}\n          />\n          <br />\n          <span className=\"label\">Email :</span>\n          <input\n            className=\"margleft\"\n            onChange={this.changedEmail}\n            type=\"text\"\n            value={this.state.Email}\n          />\n\n          <div className=\"flex addcancelbtns\">\n            <input\n              type=\"button\"\n              onClick={this.add}\n              className=\"button\"\n              value=\"Add\"\n            />\n            <input\n              type=\"button\"\n              onClick={this.cancel}\n              className=\"button\"\n              value=\"Cancel\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStoreToProps = state => {\n  return {\n    store: state\n  };\n};\nexport default connect(mapStoreToProps)(AddUser);\n","import React, { Component } from \"react\";\nimport \"../App.css\";\nimport { connect } from \"react-redux\";\n\nclass AddTodo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { title: \"\" };\n  }\n\n  changedTitle = e => {\n    this.setState({ title: e.target.value });\n  };\n  add = () => {\n    var nextId = this.props.store.todos.sort((a, b) => {return a.id-b.id })[this.props.store.todos.length-1].id + 1;\n    var _todo = {\n      userId: parseInt(this.props.match.params.id),\n      id: nextId,\n      title: this.state.title,\n      completed: false\n    };\n    this.props.dispatch({ type: \"AddNewTodo\", todo: _todo });\n    this.props.history.push(`/index/user/${this.props.match.params.id}`);\n  };\n\n  cancel = () => {\n    this.props.history.push(`/index/user/${this.props.match.params.id}`);\n  };\n  render() {\n    return (\n      <div className=\"\">\n        <div className=\"left topdiv\">\n          <span className=\"label\">\n            New Todo - User {this.props.match.params.id}\n          </span>\n        </div>\n        <div className=\"App addpost\">\n          <span className=\"label\">Title :</span>\n          <input\n            className=\"margleft\"\n            onChange={this.changedTitle}\n            type=\"text\"\n            value={this.state.title}\n          />\n          <div className=\"flex addcancelbtns\">\n            <input\n              type=\"button\"\n              onClick={this.add}\n              className=\"button\"\n              value=\"Add\"\n            />\n            <input\n              type=\"button\"\n              onClick={this.cancel}\n              className=\"button\"\n              value=\"Cancel\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStoreToProps = state => {\n  return {\n    store: state\n  };\n};\nexport default connect(mapStoreToProps)(AddTodo);\n","import React, { Component } from \"react\";\nimport {connect} from 'react-redux'\nimport \"../App.css\";\n\nclass AddPost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { title: \"\", body:\"\" };\n  }\n  changedTitle = e => {\n    this.setState({ title: e.target.value });\n  };\n  changedBody = e => {\n    this.setState({ body: e.target.value });\n  };\n  cancel=()=>{\n    this.props.history.push(`/index/user/${this.props.match.params.id}`);\n  }\n  add = () => {\n    var nextId = this.props.store.posts.sort((a, b) => {return a.id- b.id })[this.props.store.posts.length-1].id + 1;\n    var _post = {\n      userId: parseInt(this.props.match.params.id),\n      id: nextId,\n      title: this.state.title,\n      body: this.state.body\n    };\n    this.props.dispatch({ type: \"AddNewPost\", post: _post });\n    this.props.history.push(`/index/user/${this.props.match.params.id}`);\n  };\n  \n  render() {\n    return (\n      <div className=\"\">\n        <div className=\"left topdiv\">\n          <span className=\"label\">\n            New Post - User {this.props.match.params.id}\n          </span>\n        </div>\n        <div className=\"App addpost\">\n          <span className=\"label\">Title :</span>\n          <input\n            className=\"margleft\"\n            onChange={this.changedTitle}\n            type=\"text\"\n            value={this.state.title}\n          />\n<br/>\n<span className=\"label\">Body :</span>\n          <input\n            className=\"margleft\"\n            onChange={this.changedBody}\n            type=\"text\"\n            value={this.state.body}\n          />\n\n          <div className=\"flex addcancelbtns\">\n            <input\n              type=\"button\"\n              onClick={this.add}\n              className=\"button\"\n              value=\"Add\"\n            />\n            <input\n              type=\"button\"\n              onClick={this.cancel}\n              className=\"button\"\n              value=\"Cancel\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStoreToProps=(state)=>{\n  return{\n    store : state\n  }\n}\nexport default connect(mapStoreToProps) (AddPost);\n","import React, { Component } from \"react\";\nimport {connect} from 'react-redux'\nimport \"../App.css\";\n\nclass ShowTodosList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { userId: this.props.match.params.id, todos: [] };\n  }\n\n  static getDerivedStateFromProps(props, state){\n    return {todos : props.store.todos, userId: props.match.params.id}\n  }\n\n  add = () => {\n    this.props.history.push(`${this.props.match.url}/addtodo`);\n  };\n  markCompleted=(todoId)=>{\n    this.props.dispatch({type: 'setTodoToCompleted', id: todoId})\n  }\n  render() {\n    var todosByUserId = this.state.todos.filter(todo=>todo.userId===parseInt(this.state.userId));\n    var todos = todosByUserId.map((todo, index) => {\n      return (\n        <div className=\"posttodoItem\" key={index}>\n          <div>\n            <span className=\"label\"> Title : </span> {todo.title}\n          </div>\n          <div>\n            <span className=\"label\"> Completed : </span>\n            {todo.completed === false ? \"False\" : \"True\"}\n          </div>\n          <span\n            className={todo.completed === false ? \"todoBtn\" : \"hideBtn\"}\n          >\n            <input\n              type=\"button\"\n              onClick={this.markCompleted.bind(this,todo.id)}\n              className=\"space button \"\n              value=\"Mark Completed\"\n            />\n          </span>\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"App\">\n        <div className=\"left topdiv\">\n          <span className=\"label\">\n            Todos - User {this.props.match.params.id}{\" \"}\n          </span>\n          <input\n            className=\"space button floatrightBtn\"\n            type=\"button\"\n            value=\"Add\"\n            onClick={this.add}\n          />\n        </div>\n        <div className=\"userActivityDiv\">{todos}</div>\n      </div>\n    );\n  }\n}\nconst mapStoreToProps = state => {\n  return {\n    store: state\n  };\n};\nexport default connect(mapStoreToProps) (ShowTodosList);\n","import React, { Component } from \"react\";\nimport \"../App.css\";\nimport { connect } from \"react-redux\";\n\nclass ShowPostsList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return { posts: props.store.posts, userId: props.match.params.id };\n  }\n\n  add = () => {\n    this.props.history.push(`${this.props.match.url}/addpost`);\n  };\n\n  render() {\n    var postsById = this.state.posts.filter(\n      post => (post.userId === parseInt(this.state.userId))\n    );\n\n    var posts = postsById.map((item, index) => {\n      return (\n        <div className=\"posttodoItem\" key={index}>\n          <div>\n            <span className=\"label\"> Title : </span> {item.title}\n          </div>\n          <div>\n            <span className=\"label\"> Body : </span> {item.body}\n          </div>\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"App\">\n        <div className=\"left topdiv\">\n          <span className=\"label\">Posts - User {this.state.userId}</span>\n          <input\n            className=\"space button floatrightBtn\"\n            type=\"button\"\n            value=\"Add\"\n            onClick={this.add}\n          />\n        </div>\n        <div className=\"userActivityDiv\">{posts}</div>\n      </div>\n    );\n  }\n}\nconst mapStoreToProps = state => {\n  return {\n    store: state\n  };\n};\nexport default connect(mapStoreToProps)(ShowPostsList);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport AddTodo from \"./_todos/AddTodo\";\nimport AddPost from \"./_posts/AddPost\";\nimport ShowTodosList from \"./_todos/ShowTodosList\";\nimport ShowPostsList from \"./_posts/ShowPostsList\";\nimport { connect } from \"react-redux\";\n\nclass TodosAndPosts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { url: \"\" };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return { url: props.match.url };\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/index/user/:id/addtodo\" component={AddTodo} />\n          <Route path=\"/index/user/:id/\" component={ShowTodosList} />\n        </Switch>\n        <Switch>\n          <Route path=\"/index/user/:id/addpost\" component={AddPost} />\n          <Route path=\"/index/user/:id/\" component={ShowPostsList} />\n        </Switch>\n      </div>\n    );\n  }\n}\nconst mapStoreToProps = props => {\n  return {\n    store: props\n  };\n};\nexport default connect(mapStoreToProps)(TodosAndPosts);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport AddUser from \"./_users/AddUser\";\nimport { Switch, Route } from \"react-router-dom\";\nimport TodosAndPosts from \"./TodosAndPosts\";\n\nclass RightDiv extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n        <Route  path='/index/adduser' component={AddUser}\n          />\n          <Route path='/index/user/:id' component={TodosAndPosts} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default RightDiv;\n","import axios from \"axios\";\n\nclass Users {\n static getAllUsersFromWS() {\n    return axios.get(\"https://jsonplaceholder.typicode.com/users\");\n  }\n  static getAllUsers() {\n    return this.getAllUsersFromWS();\n  }\n}\n\nexport default Users;\n","import axios from \"axios\";\n\nclass Todos {\n  static getAllTodosFromWS() {\n    return axios.get(\"https://jsonplaceholder.typicode.com/todos\");\n  }\n  static getAllTodos() {\n    return this.getAllTodosFromWS();\n  }\n}\n\nexport default Todos;\n","import axios from \"axios\";\n\nclass Posts {\n  static getAllPostsFromWS() {\n    return axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n  }\n  static getAllPosts() {\n    return this.getAllPostsFromWS().then(data => {\n      return data;\n    });\n  }\n}\n\nexport default Posts;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport LeftDiv from \"./LeftDiv\";\nimport RightDiv from \"./RightDiv\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Users from \"./_dal/Users\";\nimport Todos from \"./_dal/Todos\";\nimport Posts from \"./_dal/Posts\";\n\nclass Default extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  getUsers = () => {\n    Users.getAllUsers().then(res => {\n      this.props.dispatch({ type: \"GetUsersFromServer\", users: res.data });\n    });\n  };\n\n  getTodos = () => {\n    Todos.getAllTodos().then(res => {\n      this.props.dispatch({ type: \"GetTodosFromServer\", todos: res.data });\n    });\n  };\n\n  getPosts = () => {\n    Posts.getAllPosts().then(res => {\n      this.props.dispatch({ type: \"GetPostsFromServer\", posts: res.data });\n    });\n  };\n\n  componentDidMount() {\n    var p = Promise.resolve();\n    p.then(() => {\n      return this.getUsers();\n    })\n      .then(() => {\n        return this.getPosts();\n      })\n      .then(() => {\n        this.getTodos();\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"App flex\">\n        <div className=\"half Main\">\n          <Route path=\"/\" component={LeftDiv} />\n        </div>\n        <div className=\"half\">\n          <Route path=\"/\" component={RightDiv} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect()(Default);\n","const initialState = {\r\n  users: [],\r\n  posts: [],\r\n  todos: [],\r\n  searchTerm: \"\",\r\n  usersBySearch: [],\r\n  selectedUserId: 0\r\n};\r\n\r\nconst mainreducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n  \r\n    //******users actions***********/\r\n    case \"SetUsersSearchTerm\":\r\n      return { ...state, searchTerm: action.searchTerm };\r\n\r\n    case \"SetSelectedUsersId\":\r\n      return { ...state, selectedUserId: action.userId };\r\n\r\n      case \"deleteUser\":\r\n      var _users = state.users.filter(user=> user.id !== action.userId)\r\n      state.users = _users;\r\n      return {...state};\r\n\r\n      case \"addUser\":\r\n       state.users.push(action.user);\r\n      return { ...state};\r\n\r\n      case \"updateUser\":\r\n      var userIndex = state.users.findIndex(user => {\r\n        return user.id === action.user.id;\r\n      });\r\n      state.users[userIndex] = action.user;\r\n      return { ...state};\r\n\r\n\r\n    //******todos actions***********/\r\n    case \"setTodoToCompleted\":\r\n      var todoIndex = state.todos.findIndex(element => {\r\n        return element.id === action.id;\r\n      });\r\n      state.todos[todoIndex].completed = true;\r\n      return { ...state };\r\n    case \"AddNewTodo\":\r\n      state.todos.push(action.todo);\r\n      return { ...state };\r\n\r\n\r\n    //******post actions***********/\r\n    case \"AddNewPost\":\r\n      state.posts.push(action.post);\r\n      return { ...state };\r\n\r\n    //************Start of - fiil data from web service***********************/\r\n    case \"GetUsersFromServer\":\r\n      return { ...state, users: action.users };\r\n\r\n    case \"GetTodosFromServer\":\r\n      return { ...state, todos: action.todos };\r\n\r\n    case \"GetPostsFromServer\":\r\n      return { ...state, posts: action.posts };\r\n    //************End of - fiil data from web service***********************/\r\n  \r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default mainreducer;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Default from \"./Default\";\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport mainreducer from './mainreducer.js';\n\n\n\nvar appStore = createStore(mainreducer);\nclass App extends Component {\n\n\n\n  render() {\n    return (\n      <Provider store={appStore}>\n      <Router>\n        <Switch>\n        <Redirect exact from=\"/\" to=\"/index\" />\n        <Route path='/index' component={Default} />       \n        </Switch>\n      </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}